<?php
/**
 * Test class for RouteDefinition.
 * Generated by PHPUnit on 2011-12-12 at 17:52:20.
 */
class RouteDefinitionTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var \lib\Request
	 */
	protected $Request;

	/**
	 * @var \lib\router\RouteDefinition
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->Request = new \lib\Request();
		$this->object = new \lib\router\RouteDefinition('subdomain', '/router/', 'pl:app:front:MainController:index', array('foo' => 'bar'));
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	public function testMatchRequest() {
		$this->Request->domain = 'subdomain';
		$this->Request->url = '/router/';
		$this->assertTrue($this->object->matchRequest($this->Request));

		$this->Request->domain = 'test';
		$this->Request->url = '/router/';
		$this->assertFalse($this->object->matchRequest($this->Request));

		$this->Request->domain = 'test';
		$this->Request->url = '/router.html';
		$this->assertFalse($this->object->matchRequest($this->Request));
	}

	public function testMatchIdentifier() {
		$this->assertTrue($this->object->matchIdentifier('pl:app:front:MainController:index', array('foo' => 'bar')));
		$this->assertFalse($this->object->matchIdentifier('en:app:front:MainController:index', array('foo' => 'bar')));
		$this->assertFalse($this->object->matchIdentifier('pl:app:front:MainController:foo', array('foo' => 'bar')));
		$this->assertFalse($this->object->matchIdentifier('pl:app:front:MainController:index'));
	}

	public function testMake() {
		$this->assertEquals('http://subdomain.localhost/router/', $this->object->make('http://localhost/', array('foo' => 'bar'), true));
		$this->assertEquals('http://subdomain.localhost/router/', $this->object->make('http://localhost/', array('foo' => 'bar'), false));
		$this->assertEquals('http://subdomain.localhost/router/?yada=yada', $this->object->make('http://localhost/', array('foo' => 'bar', 'yada' => 'yada'), true));
	}
}
?>
